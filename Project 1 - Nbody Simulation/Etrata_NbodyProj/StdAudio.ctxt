#BlueJ class context
comment0.params=
comment0.target=StdAudio()
comment1.params=
comment1.target=void\ init()
comment10.params=hz\ duration\ amplitude
comment10.target=double[]\ note(double,\ double,\ double)
comment10.text=\r\n\ Unit\ tests\ <tt>StdAudio</tt>.\r\n
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment11.text=\r\n\ Test\ client\ -\ play\ an\ A\ major\ scale\ to\ standard\ audio.\r\n
comment2.params=
comment2.target=void\ close()
comment2.text=\r\n\ Closes\ standard\ audio.\r\n
comment3.params=sample
comment3.target=void\ play(double)
comment3.text=\r\n\ Writes\ one\ sample\ (between\ -1.0\ and\ +1.0)\ to\ standard\ audio.\r\n\ If\ the\ sample\ is\ outside\ the\ range,\ it\ will\ be\ clipped.\r\n\r\n\ @param\ \ sample\ the\ sample\ to\ play\r\n\ @throws\ IllegalArgumentException\ if\ the\ sample\ is\ <tt>Double.NaN</tt>\r\n
comment4.params=samples
comment4.target=void\ play(double[])
comment4.text=\r\n\ Writes\ the\ array\ of\ samples\ (between\ -1.0\ and\ +1.0)\ to\ standard\ audio.\r\n\ If\ a\ sample\ is\ outside\ the\ range,\ it\ will\ be\ clipped.\r\n\r\n\ @param\ \ samples\ the\ array\ of\ samples\ to\ play\r\n\ @throws\ IllegalArgumentException\ if\ any\ sample\ is\ <tt>Double.NaN</tt>\r\n
comment5.params=filename
comment5.target=double[]\ read(java.lang.String)
comment5.text=\r\n\ Reads\ audio\ samples\ from\ a\ file\ (in\ .wav\ or\ .au\ format)\ and\ returns\r\n\ them\ as\ a\ double\ array\ with\ values\ between\ -1.0\ and\ +1.0.\r\n\r\n\ @param\ \ filename\ the\ name\ of\ the\ audio\ file\r\n\ @return\ the\ array\ of\ samples\r\n
comment6.params=filename
comment6.target=void\ play(java.lang.String)
comment6.text=\r\n\ Plays\ an\ audio\ file\ (in\ .wav,\ .mid,\ or\ .au\ format)\ in\ a\ background\ thread.\r\n\r\n\ @param\ filename\ the\ name\ of\ the\ audio\ file\r\n
comment7.params=filename
comment7.target=void\ loop(java.lang.String)
comment7.text=\r\n\ Plays\ an\ audio\ file\ (in\ .wav,\ .mid,\ or\ .au\ format)\ in\ a\ loop\ in\ a\ background\ thread.\r\n\r\n\ @param\ \ filename\ the\ name\ of\ the\ audio\ file\r\n
comment8.params=filename
comment8.target=byte[]\ readByte(java.lang.String)
comment9.params=filename\ samples
comment9.target=void\ save(java.lang.String,\ double[])
comment9.text=\r\n\ Saves\ the\ double\ array\ as\ an\ audio\ file\ (using\ .wav\ or\ .au\ format).\r\n\r\n\ @param\ \ filename\ the\ name\ of\ the\ audio\ file\r\n\ @param\ \ samples\ the\ array\ of\ samples\r\n
numComments=12
